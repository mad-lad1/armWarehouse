<?xml version="1.0"?>

<!--
Launch gazebo and spawn placebot with its controller and odometry publisher.

Arguments:
    namespace (string, default: placebot)
        Vehicle namespace.
    world_name (string, default: worlds/empty.world)
        Gazebo world name.
    cmd_timeout (double, default: 0.5)
        Command timeout passed to the placebot_controller node.
    x (double, default: 0.0)
    y (double, default: 0.0)
    z (double, default: 0.1)
    roll (double, default: 0.0)
    pitch (double, default: 0.0)
    yaw (double, default: 0.0)
        Vehicle pose. x, y, and z are measured in meters. roll, pitch, and yaw
        are measured in radians.
-->

<launch>
	<arg name="world_name" default="$(find aws_robomaker_small_warehouse_world)/worlds/VRL_warehouse.world"/>
	<arg name="cmd_timeout" default="2.0"/>
	<param name="red_box_path" type="str" value="$(find ur5_notebook)/urdf/red_box.urdf"/>
	<arg name ="namespace" default="/"/>
	<arg name="namespace1" default="placebot1"/>
	<arg name="limited" default="true"/>
	<arg name="sim" default="true" />
	<arg name="debug" default="false" />
	<!-- Vehicle pose -->
	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>
	<arg name="gui" default="true"/>
	<arg name="roll" default="0.0"/>
	<arg name="pitch" default="0.0"/>
	<arg name="yaw" default="0.0"/>
	
	<!-- Create the world. -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!-- Specify which world environment to load -->
		<!-- <arg name="world_name" value="$(find placebot_gazebo)/worlds/wh1.world"/> -->
		<arg name="world_name" value="$(arg world_name)"/>
		<arg name="paused" value="false"/>
		<arg name="gui" value="$(arg gui)"/>
	</include>	
		


	  <!-- spwan ur5 -->
  <!-- send robot urdf to param server -->
  <include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.2 -y 0.7" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- Remap follow_joint_trajectory -->
  <remap if="$(arg sim)" from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

  <!-- Launch moveit -->
  <include file="$(find ur5_moveit_config)/launch/move_group.launch">
    <arg name="limited" default="$(arg limited)"/>
    <arg name="debug" default="$(arg debug)" />
  </include>

  <!-- spawn the conveyor_belt in gazebo -->
 <!-- <node name="spawn_conveyor_belt" pkg="gazebo_ros" type="spawn_model" args="-file $(find ur5_notebook)/urdf/conveyor_belt.urdf -urdf -model conveyor_belt"/> -->
  <!-- the red blocks spawner node -->
<!--  <node name="blocks_spawner" pkg="ur5_notebook" type="blocks_spawner" output="screen" />-->

  <!-- the cylinder poses publisher node -->
  <node name="blocks_poses_publisher" pkg="ur5_notebook" type="blocks_poses_publisher" output="screen" />
  
       <!-- the cylinder poses publisher node -->
 <!-- <node name="ur5_vision" pkg="ur5_notebook" type="ur5_vision.py" output="screen" /> -->
 <!-- <node name="ur5_mp" pkg="ur5_notebook" type="ur5_mp_second_arm.py" output="screen" /> -->
 <!-- <node name="ur5_gripper" pkg="ur5_notebook" type="ur5_gripper.py" output="screen"/> -->


<node name="spawn_red_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find ur5_notebook)/urdf/red_box.urdf -urdf -x 0 -y 0  -z 4 -model red_box"/>


	<group ns="$(arg namespace1)">
		<!-- <param name="tf_prefix" value="robot1" /> -->
		
		<!-- Launch placebot -->
		<include file="$(find placebot_description)/launch/placebot.launch">
			<arg name="robot_ns" value="$(arg namespace1)"/>
		</include>

		<!-- Spawn the vehicle. -gazebo_namespace /$(arg namespace)/gazebo -->
		<node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
			  args="-urdf -param robot_description -model $(arg namespace1)
					
					-x $(arg x) -y $(arg y) -z $(arg z)
					-R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

		<!-- Load the joint controllers. One of these publishes the joint states to joint_states. -->
		<node name="controller_spawner" pkg="controller_manager" type="spawner"
			  args="$(find placebot_gazebo)/config/placebot_joints_ctrlr_params.yaml"/>
			  
		<!-- placebot controller parameters -->
		<rosparam file="$(find placebot_gazebo)/config/placebot_ctrlr_params.yaml" command="load"/>
		<!-- Launch base controller node; controls the steering and axle joints. -->
		<node name="placebot_controller" pkg="placebot_gazebo" type="placebot_controller">
			<param name="cmd_timeout" value="$(arg cmd_timeout)"/>
		</node>
		
		<!-- Launch odometry publisher node -->
		<node name="odom_publisher" pkg="placebot_gazebo" type="gazebo_odom_publisher" />

	
	</group>





</launch>
